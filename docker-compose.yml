services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: turkish-app-db
    environment:
      POSTGRES_DB: turkish_learning_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - turkish-app-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: turkish-app-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - turkish-app-network

  # Backend API (NestJS)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dev
    container_name: turkish-app-backend
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/turkish_learning_app
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIG940/bne2FE0VQUXRf3hJoU87vXA9SF3hb/l3zb1n6K srab1980@gmail.com
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - PORT=3001
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - turkish-app-network
    command: npm run start:dev

  # Frontend Web App (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=http://localhost:3001
    container_name: turkish-app-frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - turkish-app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # AI/NLP Microservices (Python)
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: turkish-app-ai
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/turkish_learning_app
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "8080:8000"
    volumes:
      - ./ai-service:/app
      - ./shared/uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - turkish-app-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000

  # Admin Panel (Next.js)
  admin:
    build:
      context: ./admin-panel
      dockerfile: Dockerfile
    container_name: turkish-app-admin
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:3001
    ports:
      - "3002:3003"
    depends_on:
      - backend
    networks:
      - turkish-app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3002"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  turkish-app-network:
    driver: bridge
