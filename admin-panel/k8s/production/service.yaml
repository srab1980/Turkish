apiVersion: v1
kind: Service
metadata:
  name: admin-panel-service
  namespace: turkish-learning-prod
  labels:
    app: admin-panel
    environment: production
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/health"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "30"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "5"
    service.beta.kubernetes.io/aws-load-balancer-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-unhealthy-threshold: "3"
spec:
  type: ClusterIP
  ports:
  - port: 3001
    targetPort: 3001
    protocol: TCP
    name: http
  selector:
    app: admin-panel
    environment: production
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: turkish-learning-prod
  labels:
    app: postgres
    environment: production
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres
  selector:
    app: postgres
    environment: production
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: turkish-learning-prod
  labels:
    app: redis
    environment: production
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app: redis
    environment: production
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: turkish-learning-prod
  labels:
    app: nginx
    environment: production
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https
  selector:
    app: nginx
    environment: production
---
# Headless service for StatefulSet components
apiVersion: v1
kind: Service
metadata:
  name: postgres-headless
  namespace: turkish-learning-prod
  labels:
    app: postgres
    environment: production
spec:
  clusterIP: None
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres
  selector:
    app: postgres
    environment: production
