# NOTE: This is a template file. In production, secrets should be managed
# through secure secret management systems like HashiCorp Vault, AWS Secrets Manager,
# or Kubernetes sealed-secrets. Never commit actual secrets to version control.

apiVersion: v1
kind: Secret
metadata:
  name: admin-panel-secrets
  namespace: turkish-learning-prod
  labels:
    app: admin-panel
    environment: production
type: Opaque
stringData:
  # Database credentials (replace with actual values)
  DB_USERNAME: "admin"
  DB_PASSWORD: "REPLACE_WITH_ACTUAL_PASSWORD"
  
  # JWT secrets (replace with actual values)
  JWT_SECRET: "REPLACE_WITH_ACTUAL_JWT_SECRET_AT_LEAST_32_CHARS"
  JWT_REFRESH_SECRET: "REPLACE_WITH_ACTUAL_REFRESH_SECRET_AT_LEAST_32_CHARS"
  
  # Session secret (replace with actual value)
  SESSION_SECRET: "REPLACE_WITH_ACTUAL_SESSION_SECRET_AT_LEAST_32_CHARS"
  
  # Encryption keys (replace with actual values)
  ENCRYPTION_KEY: "REPLACE_WITH_ACTUAL_ENCRYPTION_KEY_32_CHARS"
  
  # External service API keys (replace with actual values)
  OPENAI_API_KEY: "REPLACE_WITH_ACTUAL_OPENAI_API_KEY"
  GOOGLE_CLIENT_ID: "REPLACE_WITH_ACTUAL_GOOGLE_CLIENT_ID"
  GOOGLE_CLIENT_SECRET: "REPLACE_WITH_ACTUAL_GOOGLE_CLIENT_SECRET"
  
  # Email service credentials (replace with actual values)
  SMTP_USERNAME: "REPLACE_WITH_ACTUAL_SMTP_USERNAME"
  SMTP_PASSWORD: "REPLACE_WITH_ACTUAL_SMTP_PASSWORD"
  
  # Monitoring and logging (replace with actual values)
  SENTRY_DSN: "REPLACE_WITH_ACTUAL_SENTRY_DSN"
  DATADOG_API_KEY: "REPLACE_WITH_ACTUAL_DATADOG_API_KEY"
  
  # Redis password (if using Redis AUTH)
  REDIS_PASSWORD: "REPLACE_WITH_ACTUAL_REDIS_PASSWORD"
---
apiVersion: v1
kind: Secret
metadata:
  name: ssl-certificates
  namespace: turkish-learning-prod
  labels:
    app: nginx
    environment: production
type: kubernetes.io/tls
data:
  # Base64 encoded SSL certificate and key
  # Replace with actual certificate data
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t...
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t...
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
  namespace: turkish-learning-prod
  labels:
    app: postgres
    environment: production
type: Opaque
stringData:
  # PostgreSQL credentials (replace with actual values)
  POSTGRES_DB: "turkish_learning"
  POSTGRES_USER: "admin"
  POSTGRES_PASSWORD: "REPLACE_WITH_ACTUAL_POSTGRES_PASSWORD"
  POSTGRES_REPLICATION_USER: "replicator"
  POSTGRES_REPLICATION_PASSWORD: "REPLACE_WITH_ACTUAL_REPLICATION_PASSWORD"
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-credentials
  namespace: turkish-learning-prod
  labels:
    app: redis
    environment: production
type: Opaque
stringData:
  # Redis credentials (replace with actual values)
  REDIS_PASSWORD: "REPLACE_WITH_ACTUAL_REDIS_PASSWORD"
---
# Docker registry secret for pulling private images
apiVersion: v1
kind: Secret
metadata:
  name: docker-registry-secret
  namespace: turkish-learning-prod
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJnaGNyLmlvIjp7InVzZXJuYW1lIjoiUkVQTEFDRV9XSVRIX0FDVFVBTF9VU0VSTkFNRSIsInBhc3N3b3JkIjoiUkVQTEFDRV9XSVRIX0FDVFVBTF9UT0tFTiIsImF1dGgiOiJSRVBMQUNFX1dJVEhfQUNUVUFMX0JBU0U2NF9BVVRIIn19fQ==
