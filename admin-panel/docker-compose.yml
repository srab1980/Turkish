version: '3.8'

services:
  # Admin Panel Application
  admin-panel:
    build:
      context: .
      target: production
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - PORT=3003
      - NEXT_TELEMETRY_DISABLED=1

      # Security & Authentication (CRITICAL - Change these!)
      - JWT_SECRET=your-32-character-secure-secret-here-change-this
      - SESSION_SECRET=your-32-character-session-secret-here-change
      - NEXTAUTH_SECRET=your-32-character-nextauth-secret-here-change
      - NEXTAUTH_URL=http://localhost:3003

      # API Configuration
      - NEXT_PUBLIC_API_URL=http://localhost:3003/api
      - NEXT_PUBLIC_AI_SERVICE_URL=http://localhost:8000/api/v1

      # App Configuration
      - NEXT_PUBLIC_APP_NAME=Turkish Learning Admin
      - NEXT_PUBLIC_APP_VERSION=1.0.0
      - NEXT_PUBLIC_APP_ENV=production

      # File Upload
      - NEXT_PUBLIC_MAX_FILE_SIZE=10485760
      - NEXT_PUBLIC_ALLOWED_FILE_TYPES=image/*,audio/*,video/*,application/pdf

      # Features
      - NEXT_PUBLIC_ENABLE_AI_FEATURES=true
      - NEXT_PUBLIC_ENABLE_ANALYTICS=true
      - NEXT_PUBLIC_ENABLE_NOTIFICATIONS=true

      # Database (using the postgres service below)
      - DATABASE_URL=postgresql://admin:secure_password_change_this@postgres:5432/turkish_learning

      # Development
      - NEXT_PUBLIC_DEBUG=false
    volumes:
      - ./reports:/app/reports
    depends_on:
      - postgres
      - redis
    networks:
      - turkish-learning
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3003/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development version
  admin-panel-dev:
    build:
      context: .
      target: dev
    ports:
      - "3004:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - NEXT_TELEMETRY_DISABLED=1

      # Security & Authentication (Development - Change for production!)
      - JWT_SECRET=dev-32-character-secret-for-development-only
      - SESSION_SECRET=dev-32-character-session-for-development
      - NEXTAUTH_SECRET=dev-32-character-nextauth-for-development
      - NEXTAUTH_URL=http://localhost:3004

      # API Configuration
      - NEXT_PUBLIC_API_URL=http://localhost:3004/api
      - NEXT_PUBLIC_AI_SERVICE_URL=http://localhost:8000/api/v1

      # App Configuration
      - NEXT_PUBLIC_APP_NAME=Turkish Learning Admin (Dev)
      - NEXT_PUBLIC_APP_VERSION=1.0.0
      - NEXT_PUBLIC_APP_ENV=development

      # Features
      - NEXT_PUBLIC_ENABLE_AI_FEATURES=true
      - NEXT_PUBLIC_ENABLE_ANALYTICS=true
      - NEXT_PUBLIC_ENABLE_NOTIFICATIONS=true

      # Development
      - NEXT_PUBLIC_DEBUG=true
    volumes:
      - .:/app
      - /app/node_modules
      - ./reports:/app/reports
    depends_on:
      - postgres
      - redis
    networks:
      - turkish-learning
    profiles:
      - dev

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=turkish_learning
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - turkish-learning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d turkish_learning"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - turkish-learning
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - admin-panel
    networks:
      - turkish-learning
    restart: unless-stopped
    profiles:
      - production

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - turkish-learning
    restart: unless-stopped
    profiles:
      - monitoring

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - turkish-learning
    restart: unless-stopped
    profiles:
      - monitoring

  # Testing Environment
  test-runner:
    build:
      context: .
      target: builder
    environment:
      - NODE_ENV=test
      - CI=true
    volumes:
      - .:/app
      - /app/node_modules
      - ./reports:/app/reports
    depends_on:
      - postgres
      - redis
    networks:
      - turkish-learning
    profiles:
      - test
    command: npm run test:all

  # Load Testing with K6
  k6:
    image: grafana/k6:latest
    volumes:
      - ./tests/performance:/scripts
      - ./reports:/reports
    environment:
      - K6_OUT=json=/reports/k6-results.json
    networks:
      - turkish-learning
    profiles:
      - load-test
    command: run /scripts/load-testing.js

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  turkish-learning:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
